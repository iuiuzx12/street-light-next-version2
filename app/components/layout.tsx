import { NextUIProvider } from '@nextui-org/react';
import "@/app/globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Header from "@/app/components/header";
import {
  HeaderMobileAdminManagement,
  HeaderMobileAdmin,
} from "@/app/components/header-mobile";
import MarginWidthWrapper from "@/app/components/margin-width-wrapper";
import PageWrapper from "@/app/components/page-wrapper";
import { SideNavAdminManagement, SideNavAdmin } from "@/app/components/sidebar";
import { cookies } from "next/headers";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Test Web",
  description: "Generated by create next app",
};

export default async function MainLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //localStorage.setItem("favoriteNumber", "favoriteNumber")

  console.log("Layout");
  var CHECK_LOGIN = true;
  var USER_RULE = "";
  const messages = await getMessages();
  var token = cookies().get("token");
  try {

    const responseUser = await fetch(
      process.env.API_URL + "/StreetLight/getDataUser",
      {
        method: "POST",
        headers: {
          Authorization: "Bearer " + token?.value,
        },
      }
    );

    if (responseUser.status === 200) {
      var DataUser = await responseUser.json().finally();
      console.log(DataUser);

      switch (DataUser.userRoleId) {
        case "1":
          var USER_RULE = "AdminManagement";
          //var USER_RULE = "Admin";
          break;
        case "2":
          var USER_RULE = "Admin";
        default:
          break;
      }
    }

    

  } catch (ex) {
    console.log(ex);

    return (
      <html lang="th">
        <body className={`bg-white${inter.className}`}>
          <p>SERVER API NOT WORKING</p>
        </body>
      </html>
    );
  }

  const checkRule = (rule: string) => {
    switch (rule) {
      case "AdminManagement": {
        return <SideNavAdminManagement />;
      }
      case "Admin": {
        return <SideNavAdmin />;
      }
      default: {
        console.log("do nothing");
      }
    }
  };

  const checkRuleMobile = (rule: string) => {
    switch (rule) {
      case "AdminManagement": {
        return <HeaderMobileAdminManagement />;
      }
      case "Admin": {
        return <HeaderMobileAdmin />;
      }
      default: {
        console.log("do nothing");
      }
    }
  };

  console.log(CHECK_LOGIN);

  return (
    <NextIntlClientProvider messages={messages}>
          <NextUIProvider>
            {CHECK_LOGIN === true ? (
              <div className="flex">
                {checkRule(USER_RULE)!}
                <MarginWidthWrapper>
                    <Header />

                    {checkRuleMobile(USER_RULE)!}
                    <PageWrapper>{children}</PageWrapper>
                  </MarginWidthWrapper>
              </div>
            ) : (
              <div className="flex">
               <PageWrapper>{children}</PageWrapper>
              </div>
            )}
          </NextUIProvider>
        </NextIntlClientProvider>
  );
}