import { NextUIProvider } from '@nextui-org/react';
import "@/app/globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Header from "@/app/components/header";
import {
  HeaderMobileAdminManagement,
  HeaderMobileAdmin,
} from "@/app/components/header-mobile";
import MarginWidthWrapper from "@/app/components/margin-width-wrapper";
import PageWrapper from "@/app/components/page-wrapper";
import { SideNavAdminManagement, SideNavAdmin } from "@/app/components/sidebar";
import { cookies } from "next/headers";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { getSession } from "next-auth/react";
import { getToken } from "next-auth/jwt";
import { useRouter } from "next/router";
import { NextResponse } from "next/server";
import Login from "./[locale]/login/page";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Test Web",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //localStorage.setItem("favoriteNumber", "favoriteNumber")

  console.log("RootLayout");
  var CHECK_LOGIN = true;
  var USER_RULE = "";
  const messages = await getMessages();
  var token = cookies().get("token");
  try {
    const response = await fetch(
      "http://localhost:8012/StreetLight/checkLogin",
      {
        method: "POST",
        headers: {
          Authorization: "Bearer " + token?.value,
        },
      }
    );

    const responseUser = await fetch(
      "http://localhost:8012/StreetLight/getDataUser",
      {
        method: "POST",
        headers: {
          Authorization: "Bearer " + token?.value,
        },
      }
    );

    if (responseUser.status === 200) {
      var DataUser = await responseUser.json().finally();
      console.log(DataUser);

      switch (DataUser.userRoleId) {
        case "1":
          var USER_RULE = "AdminManagement";
          //var USER_RULE = "Admin";
          break;
        case "2":
          var USER_RULE = "Admin";
        default:
          break;
      }
    }

    if (response.status === 200) {
      CHECK_LOGIN = true;
    } else {
      CHECK_LOGIN = false;
      return (
        <html lang="th">
          <body className={`bg-white${inter.className}`}>
            <NextIntlClientProvider messages={messages}>
              <div className="flex">
                <main className="flex-1">
                  <PageWrapper>
                    <Login />
                  </PageWrapper>
                </main>
              </div>
            </NextIntlClientProvider>
          </body>
        </html>
      );
    }
  } catch (ex) {
    console.log(ex);

    return (
      <html lang="th">
        <body className={`bg-white${inter.className}`}>
          <p>SERVER API NOT WORKING</p>
        </body>
      </html>
    );
  }

  const checkRule = (rule: string) => {
    switch (rule) {
      case "AdminManagement": {
        return <SideNavAdminManagement />;
      }
      case "Admin": {
        return <SideNavAdmin />;
      }
      default: {
        console.log("do nothing");
      }
    }
  };

  const checkRuleMobile = (rule: string) => {
    switch (rule) {
      case "AdminManagement": {
        return <HeaderMobileAdminManagement />;
      }
      case "Admin": {
        return <HeaderMobileAdmin />;
      }
      default: {
        console.log("do nothing");
      }
    }
  };

  console.log(CHECK_LOGIN);

  return (
    <html lang="th">
      <body className={`bg-white${inter.className}`}>
        <NextIntlClientProvider messages={messages}>
          <NextUIProvider>
          {CHECK_LOGIN === true ? (
            <div className="flex">
              {checkRule(USER_RULE)!}
              <main className="flex-1">
                <MarginWidthWrapper>
                  <Header />

                  {checkRuleMobile(USER_RULE)!}
                  <PageWrapper>{children}</PageWrapper>
                </MarginWidthWrapper>
              </main>
            </div>
          ) : (
            <div className="flex">
              <main className="flex-1">
                <PageWrapper>{children}</PageWrapper>
              </main>
            </div>
          )}
          </NextUIProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
